name: Lint and Test Python
on:
  - pull_request

jobs:
  test:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python }}"

      - name: Cache
        id: cache-python
        uses: actions/cache@v3
        with:
          # for macOS, use the following path: ~/Library/Caches/pypoetry/virtualenvs
          path: |
            ~/Library/Caches/pypoetry/
            ~/Library/Application Support/pypoetry
            ~/.cache/pypoetry/virtualenvs
            .mypy_cache
          key: ${{ runner.os }}-build-${{ matrix.python }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.python }}-${{ hashFiles('**/poetry.lock') }}
            ${{ runner.os }}-build-${{ matrix.python }}-
            ${{ runner.os }}-

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2

      - if: ${{ steps.cache-python.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: poetry install

      - name: Lint
        run: poetry run poe check

      - name: Check Python version
        run: |
          actual_version=$(poetry run python --version)
          expected_version="Python ${{ matrix.python }}"
          if [ "$actual_version" == *"$expected_version"* ]; then
            echo "Expected $expected_version, but got $actual_version"
            exit 1
          fi

      - name: Test
        run: poetry run poe test

      - name: Coverage
        run: poetry run poe coverage-xml

      - name: Upload coverage report to Codecov
        if: matrix.python == '3.11'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true
